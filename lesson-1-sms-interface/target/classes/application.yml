# 上下文初始化加载
info:
  name: lesson-1-sms-interface
#端口
server:
  port: 9002

# 配置eureka
eureka:
  client:
    registerWithEureka: true  # 将自身实例信息配置到 eureka服务端
    fetchRegistry: true # 从eureka服务端获取 注册信息
    registryFetchIntervalSeconds: 30  # 隔30s 向eureka服务端 拉取一次注册信息
    lease-renewal-interval-in-seconds: 30 # 隔30s 向eureka服务端 发一次心跳
    prefer-ip-address: true  # 使用ip地址注册；#即鼠标指在服务上时，不显示的ip地址，避免生产环境ip地址泄露
    instanceInfoReplicationIntervalSeconds: 30  # 更新实例信息的变化到Eureka服务端的间隔
#    initialInstanceInfoReplicationIntervalSeconds: 40   # 初始化实例信息到Eureka服务端的间隔
#    eurekaServiceUrlPollIntervalSeconds: 300 # 	轮询Eureka服务端地址更改的间隔时间，单位为秒，当我们与Spring CLoud Config整合，动态刷新Eureka的serviceURL地址时需要关注该参数
#    eurekaServerReadTimeoutSeconds: 8 # 读取Eureka Server信息的超时时间，单位为秒
#    eurekaServerConnectTimeoutSeconds: 5 # 连接Eureka Server的超时时间，单位为秒
#    eurekaServerTotalConnections: 200 # 从Eureka客户端到所有Eureka服务端的连接总数
#    eurekaServerTotalConnectionsPerHost: 50 # 从Eureka客户端到每个Eureka服务端主机的连接总数  ???
#    eurekaConnectionIdleTimeoutSeconds: 30 # Eureka服务端连接的空闲关闭时间，单位为秒
#    heartbeatExecutorThreadPoolSize: 2 # 心跳连接池的初始化线程数
#    heartbeatExecutorExponentialBackOffBound: 10 # 心跳超时重试延迟时间的最大乘数值
#    cacheRefreshExecutorThreadPoolSize: 2 # 缓存刷新线程池的初始化线程数
#    cacheRefreshExecutorExponentialBackOffBound: 10 # 缓存刷新重试延迟时间的最大乘数值
#    useDnsForFetchingServiceUrls: false # 使用DNS来获取Eureka服务端的serviceUrl
#    preferSameZoneEureka: true  # 偏好使用处于相同Zone的Eureka服务端
#    filterOnlyUpInstances: true # 过滤，仅保留UP状态的实例
    service-url:
          defaultZone: http://127.0.0.1:8761/eureka/  # 指定注册中心地址
  instance:
    ######################### 续约 心跳 下线 #########################
    #  eureka客户需要多长时间发送心跳给eureka服务器，表明它仍然活着,默认为30 秒
    lease-renewal-interval-in-seconds: 20







# 这个配置会被spring.application.instance_id覆盖（默认 hostname，appnane，port）
#    metadataMap: 
#      instanceId: ${spring.application.name}:${spring.cloud.client.hostname}:${server.port}:${random.value}
