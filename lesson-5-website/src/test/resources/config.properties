# Hystrix 默认加载的配置文件 - 限流、 熔断示例

# 超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000000

# 线程池大小
hystrix.threadpool.default.coreSize=10
hystrix.threadpool.default.maxQueueSize=-1
hystrix.threadpool.default.queueSizeRejectionThreshold=5

# 限流策略
hystrix.threadpool.smsGroup.coreSize=20
hystrix.threadpool.smsGroup.maxQueueSize=1000
hystrix.threadpool.smsGroup.queueSizeRejectionThreshold=800















# 熔断策略
# 启用/禁用熔断机制
hystrix.command.default.circuitBreaker.enabled=false
# 强制开启
hystrix.command.default.circuitBreaker.forceOpen=false
# 强制关闭
hystrix.command.default.circuitBreaker.forceClosed=false
# 10秒统计一次
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000
# 令牌桶数量
hystrix.command.default.metrics.rollingStats.numBuckets=10
# 前提条件，时间内发起一定数量的请求。  也就是10秒钟内至少请求8次，熔断器才发挥起作用
hystrix.command.default.circuitBreaker.requestVolumeThreshold=8
# 错误百分比。达到或超过这个百分比，启用熔断
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
# 10秒后，半打开状态
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=10000





# (在SpringCloud架构中与分布式配置中心结合，可以实现动态开启)
# Spring Cloud Config

# 大量用到 多线程、锁 
# 线程池
# com.netflix.hystrix.HystrixThreadPool.HystrixThreadPoolDefault
# com.netflix.hystrix.HystrixThreadPool.Factory
# 熔断
# com.netflix.hystrix.AbstractCommand.applyHystrixSemantics  applyHystrixSemantics